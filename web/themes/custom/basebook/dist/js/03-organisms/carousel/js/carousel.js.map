{"version":3,"file":"dist/js/03-organisms/carousel/js/carousel.js","mappings":";;;;AACAA,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,CAAE,IAAM,CAChD,KAAM,CAAAC,CAAS,CAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC,CACtD,GAAuB,CAAC,CAApBF,CAAS,CAACG,MAAU,CACtB,IAAK,KAAM,CAAAC,CAAQ,GAAI,CAAAJ,CAAS,CAAE,CAChC,KAAM,CAAAK,CAAM,CAAG,GAAI,CAAAC,MAAM,CAACF,CAAQ,CAAC,CACnCC,CAAM,CAACE,EAAE,CAAC,SAAS,CAAE,UAAY,CAC/B,KAAM,CAAAC,CAAO,CAAGJ,CAAQ,CAACK,aAAa,CAAC,kBAAkB,CAAC,CAC1D,GAAID,CAAO,CAAE,MACL,CAAAE,CAAU,CAAGN,CAAQ,CAACK,aAAa,CAAC,uBAAuB,CAAC,CAC5DE,CAAU,CAAGP,CAAQ,CAACK,aAAa,CAAC,wBAAwB,CAAC,CAE/DC,CAAU,EACZA,CAAU,CAACX,gBAAgB,CAAC,OAAO,CAAGa,CAAC,EAAK,CAC1CA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,CAAU,CAACI,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC,CACnCJ,CAAU,CAACG,SAAS,CAACE,GAAG,CAAC,MAAM,CAAC,CAChCX,CAAM,EAAEY,UAAU,EAAEC,QAAQ,CAACC,IAAI,CAAC,CACpC,CAAC,CAAC,CAGAR,CAAU,EACZA,CAAU,CAACZ,gBAAgB,CAAC,OAAO,CAAGa,CAAC,EAAK,CAC1CA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBF,CAAU,CAACG,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC,CACnCL,CAAU,CAACI,SAAS,CAACE,GAAG,CAAC,MAAM,CAAC,CAChCX,CAAM,EAAEY,UAAU,EAAEC,QAAQ,CAACE,KAAK,CAAC,CACrC,CAAC,CAEL,CACF,CAAC,CAAC,CAEF,KAAM,CAAAC,CAAU,CACQ,aAAa,EAAnCvB,MAAM,CAACwB,WAA4B,CAAG,EAAE,CAAGxB,MAAM,CAACO,MAAM,CAACkB,UAAU,CACrElB,CAAM,CAACmB,KAAK,CAACH,CAAU,CACzB,CACD,KAGK,CAAAI,CAAqB,CAAGxB,QAAQ,CAACC,gBAAgB,CACrD,2BACF,CAAC,CACKwB,CAA+B,CAAGzB,QAAQ,CAACC,gBAAgB,CAC/D,sCACF,CAAC,CAEGuB,CAAqB,EAAIC,CAA+B,EAC1DD,CAAqB,CAACE,OAAO,CAAC,CAACC,CAAO,CAAEC,CAAK,GAAK,MAC1C,CAAAC,CAAc,CAAG,GAAI,CAAAxB,MAAM,CAACsB,CAAO,CAAC,CACpCG,CAAwB,CAAG,GAAI,CAAAzB,MAAM,CACzCoB,CAA+B,CAACG,CAAK,CAAC,CACtC,CACEG,YAAY,GACd,CACF,CAAC,CAEDF,CAAc,CAACG,IAAI,CAACF,CAAwB,CAAC,CAE7CD,CAAc,CAACN,KAAK,CAAC,CAAC,CACtBO,CAAwB,CAACP,KAAK,CAAC,CACjC,CAAC,CAEL,CAAC,CAAC,C","sources":["webpack://basebook/./components/03-organisms/carousel/carousel.js"],"sourcesContent":["/* eslint-disable */\nwindow.addEventListener('DOMContentLoaded', () => {\n  const carousels = document.querySelectorAll('.splide');\n  if (carousels.length > 0) {\n    for (const carousel of carousels) {\n      const splide = new Splide(carousel);\n      splide.on('mounted', function () {\n        const buttons = carousel.querySelector('.splide__buttons');\n        if (buttons) {\n          const buttonPlay = carousel.querySelector('.splide__button--play');\n          const buttonStop = carousel.querySelector('.splide__button--pause');\n\n          if (buttonPlay) {\n            buttonPlay.addEventListener('click', (e) => {\n              e.preventDefault();\n              buttonPlay.classList.remove('show');\n              buttonStop.classList.add('show');\n              splide?.Components?.Autoplay.play();\n            });\n          }\n\n          if (buttonStop) {\n            buttonStop.addEventListener('click', (e) => {\n              e.preventDefault();\n              buttonStop.classList.remove('show');\n              buttonPlay.classList.add('show');\n              splide?.Components?.Autoplay.pause();\n            });\n          }\n        }\n      });\n\n      const extensions =\n        window.CONFIG_TYPE == 'DEVELOPMENT' ? '' : window.splide.Extensions;\n      splide.mount(extensions);\n    }\n  }\n\n  // Seleccionar los contenedores del carrusel principal y de las miniaturas\n  const carouselImagesElement = document.querySelectorAll(\n    '.carousel--images .splide',\n  );\n  const carouselImagesThumbnailsElement = document.querySelectorAll(\n    '.carousel--images_thumbnails .splide',\n  );\n\n  if (carouselImagesElement && carouselImagesThumbnailsElement) {\n    carouselImagesElement.forEach((element, index) => {\n      const carouselImages = new Splide(element);\n      const carouselImagesThumbnails = new Splide(\n        carouselImagesThumbnailsElement[index],\n        {\n          isNavigation: true,\n        },\n      );\n\n      carouselImages.sync(carouselImagesThumbnails);\n\n      carouselImages.mount();\n      carouselImagesThumbnails.mount();\n    });\n  }\n});\n"],"names":["window","addEventListener","carousels","document","querySelectorAll","length","carousel","splide","Splide","on","buttons","querySelector","buttonPlay","buttonStop","e","preventDefault","classList","remove","add","Components","Autoplay","play","pause","extensions","CONFIG_TYPE","Extensions","mount","carouselImagesElement","carouselImagesThumbnailsElement","forEach","element","index","carouselImages","carouselImagesThumbnails","isNavigation","sync"],"sourceRoot":""}